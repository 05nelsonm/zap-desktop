{"version":3,"file":"static/iframe.f2f38e47dcde33e2020f.bundle.js","sources":["webpack:///./.storybook/config.js","webpack:///./app/components/UI/GlobalStyle.js","webpack:///./app/components/UI/Heading.js"],"sourcesContent":["import React from 'react'\nimport { addDecorator, configure, setAddon } from '@storybook/react'\nimport { withThemes } from 'storybook-styled-components'\nimport { themes } from '@storybook/components'\nimport { withOptions } from '@storybook/addon-options'\nimport { withInfo } from '@storybook/addon-info'\nimport chaptersAddon, { setDefaults } from 'react-storybook-addon-chapters'\nimport { withConsole } from '@storybook/addon-console'\nimport { withKnobs } from '@storybook/addon-knobs'\nimport { linkTo } from '@storybook/addon-links'\nimport { setIntlConfig, withIntl } from 'storybook-addon-intl'\nimport StoryRouter from 'storybook-react-router'\nimport { dark, light } from 'themes'\nimport { getDefaultLocale, locales } from 'lib/i18n'\nimport { BackgroundDark, GlobalStyle } from 'components/UI'\n\n// Register supported locales.\nimport '../app/lib/i18n/locale'\n\n// Get translations.\nimport translations from '../app/lib/i18n/translation'\n\n// Default the locale to English.\nconst defaultLocale = getDefaultLocale()\n\nconst getMessages = locale => translations[locale]\n\n// Set intl configuration\nsetIntlConfig({\n  locales: locales,\n  defaultLocale: 'en',\n  getMessages\n})\n\n// Info\naddDecorator(\n  withInfo({\n    styles: {\n      button: {\n        base: {\n          background: dark.colors.lightningOrange\n        }\n      }\n    }\n  })\n)\n\n// Intl\naddDecorator(withIntl)\n\n// Router\naddDecorator(StoryRouter({}))\n\n// Console.\naddDecorator((storyFn, context) => withConsole()(storyFn)(context))\n\n// Knobs\naddDecorator(withKnobs)\n\n// Options\naddDecorator(\n  withOptions({\n    name: 'Zap Desktop',\n    url: 'https://ln-zap.github.io/zap-desktop',\n    theme: themes.dark,\n    hierarchySeparator: /\\./\n  })\n)\n\n// Zap Global style.\naddDecorator(story => (\n  <React.Fragment>\n    <GlobalStyle />\n    <BackgroundDark p={3} css={{ height: '100vh', 'overflow-y': 'scroll !important' }}>\n      {story()}\n    </BackgroundDark>\n  </React.Fragment>\n))\n\n// Zap Themes.\naddDecorator(withThemes({ Dark: dark, Light: light }))\n\n// Chapters\nsetAddon(chaptersAddon)\nsetDefaults({\n  sectionOptions: {\n    // useTheme: false,\n    showSource: false,\n    allowSourceToggling: false,\n    showPropTables: false,\n    allowPropTablesToggling: true\n  }\n})\n\n// automatically import all files ending in *.stories.js\nconst req = require.context('../stories', true, /.stories.js$/)\nfunction loadStories() {\n  req.keys().forEach(filename => req(filename))\n}\n\nconfigure(loadStories, module)\n","import { createGlobalStyle } from 'styled-components'\nimport reset from 'styled-reset'\n\n// Import fonts using webpack.\n// See https://github.com/styled-components/styled-components/issues/233\nimport RobotoLightWoff from 'fonts/roboto-v18-latin-300.woff'\nimport RobotoRegularWoff from 'fonts/roboto-v18-latin-regular.woff'\n\n/* eslint-disable max-len */\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  /* Adapted from  https://google-webfonts-helper.herokuapp.com/fonts/roboto?subsets=latin */\n\n  /* roboto-300 - latin */\n  @font-face {\n    font-family: 'Roboto';\n    font-style: normal;\n    font-weight: 300;\n    src: local('Roboto Light'), local('Roboto-Light'),\n         url(${RobotoLightWoff}) format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n  }\n  /* roboto-regular - latin */\n  @font-face {\n    font-family: 'Roboto';\n    font-style: normal;\n    font-weight: 400;\n    src: local('Roboto'), local('Roboto-Regular'),\n         url(${RobotoRegularWoff}) format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n  }\n\n  html {\n    box-sizing: border-box;\n  }\n\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n\n  body {\n    position: relative;\n    overflow-y: hidden;\n    -webkit-font-smoothing: antialiased;\n    -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\n    font-family: 'Roboto', Arial, Helvetica, sans-serif;\n    font-weight: 300;\n    font-size: 13px;\n  }\n\n  .element-show {\n    display: inherit;\n  }\n\n  .element-hide {\n    display: none;\n  }\n\n  /* Tooltips */\n  [data-hint] {\n    position: relative;\n  }\n\n  [data-hint]::before,\n  [data-hint]::after {\n    position: absolute;\n    will-change: transform;\n    visibility: hidden;\n    opacity: 0;\n    z-index: 999;\n    pointer-events: none;\n    transition: 0.2s ease;\n    transition-delay: 0ms;\n  }\n\n  [data-hint]::before {\n    content: '';\n    position: absolute;\n    background: transparent;\n    border: 6px solid transparent;\n    z-index: 999;\n  }\n\n  [data-hint]::after {\n    content: attr(data-hint);\n    background: ${props => props.theme.colors.lightestBackground};\n    color: ${props => props.theme.colors.primaryText};\n    border: 1px solid ${props => props.theme.colors.gray};\n    border-radius: 3px;\n    max-width: 260px;\n    text-shadow: 0 -1px 0 black;\n    padding: 8px 10px;\n    word-wrap: break-word;\n    box-shadow: 0 3px 4px 0 rgba(30, 30, 30, 0.5), 0 2px 4px 0 rgba(0, 0, 0, 0.5);\n  }\n\n  [data-hint]:hover::before,\n  [data-hint]:hover::after {\n    visibility: visible;\n    opacity: 1;\n  }\n\n  .hint--bottom::before,\n  .hint--bottom-left::before {\n    border-bottom-color: #404040;\n  }\n\n  .hint--top::before,\n  .hint--top-left::before {\n    border-top-color: #404040;\n  }\n\n  .hint--bottom::before {\n    margin-top: -12px;\n  }\n\n  .hint--bottom::after {\n    margin-left: -18px;\n  }\n\n  .hint--bottom::before,\n  .hint--bottom::after {\n    top: 100%;\n    left: 50%;\n  }\n\n  .hint--bottom:hover::after,\n  .hint--bottom:hover::before {\n    -webkit-transform: translateY(8px);\n    transform: translateY(8px);\n  }\n\n  .hint--top::before {\n    margin-bottom: -12px;\n  }\n\n  .hint--top::after {\n    margin-left: -18px;\n  }\n\n  .hint--top::before,\n  .hint--top::after {\n    bottom: 100%;\n    left: 50%;\n  }\n\n  .hint--top:hover::after,\n  .hint--top:hover::before {\n    -webkit-transform: translateY(-8px);\n    transform: translateY(-8px);\n  }\n\n  .hint--top-left::before {\n    margin-bottom: -12px;\n  }\n\n  .hint--top-left::after {\n    margin-right: -6px;\n  }\n\n  .hint--top-left::before,\n  .hint--top-left::after {\n    bottom: 100%;\n    right: 12px;\n  }\n\n  .hint--top-left:hover::after,\n  .hint--top-left:hover::before {\n    -webkit-transform: translateY(-8px);\n    transform: translateY(-8px);\n  }\n\n  .hint--bottom-left::before {\n    margin-top: -12px;\n  }\n\n  .hint--bottom-left::after {\n    margin-right: -6px;\n  }\n\n  .hint--bottom-left::before,\n  .hint--bottom-left::after {\n    top: 100%;\n    right: 12px;\n  }\n\n  .hint--bottom-left:hover::after,\n  .hint--bottom-left:hover::before {\n    -webkit-transform: translateY(8px);\n    transform: translateY(8px);\n  }\n\n  .hint--left::before {\n    margin-right: -12px;\n    margin-top: -6px;\n  }\n\n  .hint--left::after {\n    margin-right: -14px;\n  }\n\n  .hint--left::before,\n  .hint--left::after {\n    right: 100%;\n    bottom: 50%;\n  }\n\n  .hint--left:hover::after,\n  .hint--left:hover::before {\n    -webkit-transform: translateX(-8px);\n    transform: translateX(-8px);\n  }\n\n`\n\nexport default GlobalStyle\n","import React from 'react'\nimport { Heading as BaseHeading } from 'rebass'\n\n/**\n * @render react\n * @name Heading\n * @example\n * <Heading />\n */\nclass Heading extends React.PureComponent {\n  static displayName = 'Heading'\n\n  render() {\n    return (\n      <BaseHeading\n        as=\"h2\"\n        lineHeight=\"1.4\"\n        fontWeight=\"light\"\n        fontSize={5}\n        color=\"primaryText\"\n        {...this.props}\n      />\n    )\n  }\n}\n\nHeading.h1 = props => <Heading fontSize={6} {...props} as=\"h1\" />\nHeading.h2 = props => <Heading fontSize={5} {...props} as=\"h2\" />\nHeading.h3 = props => <Heading fontSize={4} {...props} as=\"h3\" />\nHeading.h4 = props => <Heading fontSize={3} {...props} as=\"h4\" />\nHeading.h5 = props => <Heading fontSize={3} {...props} as=\"h5\" />\nHeading.h6 = props => <Heading fontSize={3} {...props} as=\"h6\" />\n\nHeading.h1.displayName = 'Heading1'\nHeading.h2.displayName = 'Heading2'\nHeading.h3.displayName = 'Heading3'\nHeading.h4.displayName = 'Heading4'\nHeading.h5.displayName = 'Heading5'\nHeading.h6.displayName = 'Heading6'\n\nexport default Heading\n"],"mappings":"AAuBA;ACbA;AACA;;;;;;;;;AASA;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EA","sourceRoot":""}