{"version":3,"file":"static/iframe.b8be49c3dce0b4b04ebb.bundle.js","sources":["webpack:///./.storybook/config.js","webpack:///./app/components/UI/GlobalStyle.js","webpack:///./app/components/UI/Heading.js"],"sourcesContent":["import React from 'react'\nimport { addDecorator, configure, setAddon } from '@storybook/react'\nimport { withThemes } from 'storybook-styled-components'\nimport { themes } from '@storybook/components'\nimport { withOptions } from '@storybook/addon-options'\nimport { setDefaults, withInfo } from '@storybook/addon-info'\nimport { withConsole } from '@storybook/addon-console'\nimport { linkTo } from '@storybook/addon-links'\nimport { setIntlConfig, withIntl } from 'storybook-addon-intl'\nimport chaptersAddon from 'react-storybook-addon-chapters'\nimport StoryRouter from 'storybook-react-router'\nimport { dark, light } from 'themes'\nimport { getDefaultLocale, locales } from 'lib/i18n'\nimport { GlobalStyle } from 'components/UI'\n\n// Register supported locales.\nimport '../app/lib/i18n/locale'\n\n// Get translations.\nimport translations from '../app/lib/i18n/translation'\n\n// Default the locale to English.\nconst defaultLocale = getDefaultLocale()\n\nconst getMessages = locale => translations[locale]\n\n// Set intl configuration\nsetIntlConfig({\n  locales: locales,\n  defaultLocale: 'en',\n  getMessages\n})\n\n// Info\naddDecorator(\n  withInfo({\n    styles: {\n      button: {\n        base: {\n          background: dark.colors.lightningOrange\n        }\n      }\n    }\n  })\n)\n\n// Intl\naddDecorator(withIntl)\n\n// Router\naddDecorator(StoryRouter({}))\n\n// Chapters\nsetAddon(chaptersAddon)\n\n// Console.\naddDecorator((storyFn, context) => withConsole()(storyFn)(context))\n\n// Options\naddDecorator(\n  withOptions({\n    name: 'Zap Desktop',\n    url: 'https://ln-zap.github.io/zap-desktop',\n    theme: themes.dark,\n    hierarchySeparator: /\\./\n  })\n)\n\n// Zap Global style.\naddDecorator(story => (\n  <React.Fragment>\n    <GlobalStyle />\n    {story()}\n  </React.Fragment>\n))\n\n// Zap Themes.\naddDecorator(withThemes({ Dark: dark, Light: light }))\n\n// automatically import all files ending in *.stories.js\nconst req = require.context('../stories', true, /.stories.js$/)\nfunction loadStories() {\n  req.keys().forEach(filename => req(filename))\n}\n\nconfigure(loadStories, module)\n","import { createGlobalStyle } from 'styled-components'\nimport reset from 'styled-reset'\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  @font-face {\n    font-family: 'Roboto', sans-serif;\n    font-style: normal;\n    font-weight: 300;\n    src: local('Roboto Light'), local('Roboto-Light'), url(https://fonts.gstatic.com/s/roboto/v15/Fl4y0QdOxyyTHEGMXX8kcaCWcynf_cDxXwCLxiixG1c.ttf) format('truetype');\n\n    /* avoid flicker - see https://www.styled-components.com/docs/faqs#how-do-i-fix-flickering-text-after-server-side-rendering*/\n    font-display: fallback;\n  }\n\n  html {\n    box-sizing: border-box;\n  }\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n  body {\n    position: relative;\n    overflow-y: hidden;\n    -webkit-font-smoothing: antialiased;\n    -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\n    font-family: 'Roboto', Arial, Helvetica, sans-serif;\n    font-size: 13px;\n  }\n\n  .element-show {\n    display: inherit;\n  }\n\n  .element-hide {\n    display: none;\n  }\n`\n\nexport default GlobalStyle\n","import React from 'react'\nimport { Heading as BaseHeading } from 'rebass'\n\n/**\n * @render react\n * @name Heading\n * @example\n * <Heading />\n */\nclass Heading extends React.PureComponent {\n  static displayName = 'Heading'\n\n  render() {\n    return (\n      <BaseHeading\n        as=\"h2\"\n        lineHeight=\"1.4\"\n        fontWeight=\"normal\"\n        fontSize={5}\n        color=\"primaryText\"\n        {...this.props}\n      />\n    )\n  }\n}\n\nHeading.h1 = props => <Heading fontSize={6} {...props} as=\"h1\" />\nHeading.h2 = props => <Heading fontSize={5} {...props} as=\"h2\" />\nHeading.h3 = props => <Heading fontSize={4} {...props} as=\"h3\" />\nHeading.h4 = props => <Heading fontSize={3} {...props} as=\"h4\" />\nHeading.h5 = props => <Heading fontSize={3} {...props} as=\"h5\" />\nHeading.h6 = props => <Heading fontSize={3} {...props} as=\"h6\" />\n\nHeading.h1.displayName = 'Heading1'\nHeading.h2.displayName = 'Heading2'\nHeading.h3.displayName = 'Heading3'\nHeading.h4.displayName = 'Heading4'\nHeading.h5.displayName = 'Heading5'\nHeading.h6.displayName = 'Heading6'\n\nexport default Heading\n"],"mappings":"AAsBA;AClBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIA","sourceRoot":""}